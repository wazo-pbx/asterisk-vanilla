#!/bin/sh

set -e

USER='asterisk'

case "$1" in
    configure)
	# add user
	if ! getent passwd $USER > /dev/null ; then
		echo "Adding system user $USER" 1>&2
		adduser --quiet --system --group --no-create-home \
			--home /var/lib/asterisk \
			--gecos "Asterisk PBX daemon" \
			$USER
	fi

	# add asterisk to required groups
	for group in dialout audio; do
		if groups $USER | grep -w -q -v $group; then
			adduser --quiet $USER $group
		fi
	done

	# chown asterisk on all $dirs and their subdirectories
	# do not harm the files, they should be empty on new installations
	# and we don't want to mess-up anything on old installations
	find /var/log/asterisk \
	     /var/lib/asterisk \
	     -type d | while read dir; do
		if ! dpkg-statoverride --list "$dir" > /dev/null ; then
			chown asterisk: $dir
		fi
	done 
	
	# this is not needed for new installations but is not such a bad idea
	# removing this will _break_ upgrades from versions < 1:1.4.10.1~dfsg-1
	#
	# we are doing the same for subdirectories, since we are not shipping
	# any and it's supposed to be user-modifiable
	if ! dpkg-statoverride --list "/etc/asterisk" > /dev/null ; then
		chown asterisk: /etc/asterisk
	fi

	# spool holds some sensitive information (e.g. monitor, voicemail etc.)
	find /var/spool/asterisk -type d | while read dir; do
		if ! dpkg-statoverride --list "$dir" > /dev/null ; then
			chown asterisk: $dir
			chmod 750 $dir
		fi
	done

	# Create /usr/local directory; policy 9.1.2
	if [ ! -e /usr/local/share/asterisk/sounds ]; then
		if mkdir -p /usr/local/share/asterisk/sounds 2>/dev/null ; then
			chown root:staff /usr/local/share/asterisk/sounds
			chmod 2775 /usr/local/share/asterisk/sounds
		fi
	fi

	### this is done here in case asterisk-config was installed/upgraded first

	set +e # ignore errors temporarily

	# find the name of the package providing config; either asterisk-config
	# or a package providing asterisk-config-custom
	ASTERISK_CONFIG=`dpkg-query -W -f='${Package}\t${Provides}\n' | \
			 sed -nr 's/(.*)\tasterisk-config-custom|(asterisk-config)(\t.*)?/\1\2/p'`

	# find conffiles under /etc/asterisk belonging to asterisk-config
	# and chown them to user asterisk.
	dpkg-query -W -f='${Conffiles}\n' $ASTERISK_CONFIG 2>/dev/null | \
	  sed -nr -e 's; (/etc/asterisk/.*) [0-9a-f]*;\1;p' | \
	while read conffile; do
		chown asterisk: $conffile 2>/dev/null
	done

	# handle them in the end with a glob since it's way faster
	dpkg-statoverride --quiet --list '/etc/asterisk/*' | while read STAT; do
		chown `echo $STAT | cut -d' ' -f 1,2,4 | sed 's/ /:/'` \
			2>/dev/null
	done

	set -e

	# systemd migration
	drop_in='/etc/systemd/system/asterisk.service.d/auto-sysv-migration.conf'
	if [ -f /etc/default/asterisk -a ! -f "${drop_in}" ]; then
		# be on the safe side and source /etc/default/asterisk in a subshell
		(
			. /etc/default/asterisk
			if [ -n "${CONFD_HOST}" -o -n "${CONFD_PORT}" -o -n "${CONFD_HTTPS}" -o -n "${CONFD_USERNAME}" -o -n "${CONFD_PASSWORD}" ]; then
				mkdir -p $(dirname "${drop_in}")
				echo '[Service]' > "${drop_in}"
				if [ -n "${CONFD_HOST}" ]; then
					echo "Environment=CONFD_HOST=${CONFD_HOST}" >> "${drop_in}"
				fi
				if [ -n "${CONFD_PORT}" ]; then
					echo "Environment=CONFD_PORT=${CONFD_PORT}" >> "${drop_in}"
				fi
				if [ -n "${CONFD_HTTPS}" ]; then
					echo "Environment=CONFD_HTTPS=${CONFD_HTTPS}" >> "${drop_in}"
				fi
				if [ -n "${CONFD_USERNAME}" ]; then
					echo "Environment=CONFD_USERNAME=${CONFD_USERNAME}" >> "${drop_in}"
				fi
				if [ -n "${CONFD_PASSWORD}" ]; then
					echo "Environment=CONFD_PASSWORD=${CONFD_PASSWORD}" >> "${drop_in}"
				fi

				systemctl daemon-reload || true
			fi
		)
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


